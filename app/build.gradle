/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'com.adarshr.test-logger' version '3.1.0'
    id 'jacoco'
}
group 'hexlet.code'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation 'info.picocli:picocli:4.7.1'
    annotationProcessor 'info.picocli:picocli-codegen:4.7.1'
    // a dependency on Jackson Databind
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.8.9'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.2'
    // Use JUnit Jupiter for testing.
    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.9.2',
            'org.assertj:assertj-core:3.24.2'
    )
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
}

compileJava {
    options.release = 17
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

application {
    // Define the main class for the application.
    mainClass = 'hexlet.code.App'
}

testlogger {
    showStandardStreams true
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
    }
}
